
volumes:
  prometheus-data:
    driver: local
   
  grafana-data:
    driver: local
    
networks:
  loki:
    driver: bridge
    
services:
  prometheus:
    image: 192.168.4.15:6000/prom/prometheus:v3.5.0
    container_name: prometheus
    user: "0:0"
    ports:
      - 9090:9090
    command: "--config.file=/config/prometheus.yml"
    volumes:
      - /home/milan/Desktop/prometheus/config:/config
      - prometheus-data:/prometheus
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped


  grafana:
    image: 192.168.4.15:6000/grafana/grafana:12.2.0-16791878397
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    restart: unless-stopped
    
  #loki:
  #  user: "0:0"
  #  image: grafana/loki:latest
  #  container_name: loki
  #  ports:
  #    - "3100:3100"
  #  command: -config.file=/etc/loki/loki-config.yml
  #  volumes:
  #    - ./loki/loki-config.yml:/etc/loki/loki-config.yml
  #    - ./loki/chunks:/loki/chunks
  #    - ./loki/index:/loki/index
  #    - ./loki/cache:/loki/cache
  #    - ./loki/rules:/loki/rules
  #    - ./loki/rules-temp:/loki/rules-temp
  #    - ./loki/wal:/wal
  #    - ./loki/var-loki:/var/loki
  #  restart: unless-stopped

  # 
  #promtail:
  #  image: grafana/promtail:2.9.2
  #  container_name: promtail
  #  user: "0:0"
  #  volumes:
  #    - /var/log:/var/log
  #    - ./promtail-config.yml:/etc/promtail/config.yml
  #  command: -config.file=/etc/promtail/config.yml
  #  restart: unless-stopped
  #  depends_on:
  #    - loki

  loki:
    image: grafana/loki:latest
    container_name: loki
    volumes:
      - ./loki:/etc/loki
    ports:
      - "3100:3100"
    restart: unless-stopped
    command: -config.file=/etc/loki/loki-config.yml
    #networks:
    #  - loki-net
  promtail:
    image: grafana/promtail:2.9.2
    container_name: promtail
    volumes:
      - /var/log:/var/log
      - ./promtail:/etc/promtail
    ports:
      - "1514:1514" # this is only needed if you are going to send syslogs
    restart: unless-stopped
    command: -config.file=/etc/promtail/promtail-config.yml
    #networks:
    #  - loki-net
    stop_grace_period: 5s


  node_exporter:
    image: 192.168.4.15:6000/quay.io/prometheus/node-exporter:v1.9.1
    container_name: node_exporter
    command: "--path.rootfs=/host"
    pid: host
    restart: unless-stopped
    volumes:
      - /:/host:ro,rslave


  
  cadvisor:
    image: 192.168.4.15:6000/gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - 8080:8080
    volumes:
      - /:/rootfs:ro
      - /sys:/sys:ro
      - /run:/run:ro
      - /var/run:/var/run:rw
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    devices:
      - /dev/kmsg
    privileged: true
    restart: unless-stopped

  docker_state_exporter:
    image: 192.168.4.15:6000/karugaru/docker_state_exporter
    container_name: docker_state_exporter
    ports:
      - 8085:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped


 # telegraf:
 #   image: telegraf
 #   container_name: telegraf
 #   ports:
 #     - "9273:9273"  # SNMP metrics exposed here
 #   volumes:
 #     - ./config/telegraf.conf:/etc/telegraf/telegraf.conf:ro
 #   restart: unless-stopped




 # vector:
 #   image: timberio/vector:0.38.0-debian
 #   ports:
 #     - "666:666/udp"
 #   volumes:
 #     - ./vector.yaml:/etc/vector/vector.yaml
 #   command: ["vector", "-c", "/etc/vector/vector.yaml"]
 #   restart: unless-stopped


 # mysql:
 #   image: mysql:5.7
 #   container_name: zabbix-mysql
 #   environment:
 #     MYSQL_DATABASE: zabbix
 #     MYSQL_USER: zabbix
 #     MYSQL_PASSWORD: zabbix_pass
 #     MYSQL_ROOT_PASSWORD: root_pass
 #   volumes:
 #     - ./mysql:/var/lib/mysql
 #   restart: unless-stopped

 # zabbix-server:
 #   image: zabbix/zabbix-server-mysql:alpine-latest
 #   container_name: zabbix-server
 #   depends_on:
 #     - mysql
 #   environment:
 #     DB_SERVER_HOST: mysql
 #     MYSQL_DATABASE: zabbix      
 #     MYSQL_USER: zabbix
 #     MYSQL_PASSWORD: zabbix_pass
 #   ports:
 #     - "10051:10051"
 #   restart: unless-stopped

 # zabbix-web:
 #   image: zabbix/zabbix-web-nginx-mysql:alpine-latest
 #   container_name: zabbix-web
 #   depends_on:
 #     - zabbix-server
 #   environment:
 #     DB_SERVER_HOST: mysql
 #     MYSQL_USER: zabbix
 #     MYSQL_PASSWORD: zabbix_pass
 #     MYSQL_DATABASE: zabbix
 #     ZBX_SERVER_HOST: zabbix-server
 #     PHP_TZ: Asia/Tehran
 #   ports:
 #     - "8088:8080"
 #   restart: unless-stopped

  mssql-exporter:
    image: 192.168.4.15:6000/awaragi/prometheus-mssql-exporter
    container_name: mssql-exporter
    ports:
      - "4000:4000"
    environment:
      SERVER: 192.168.4.40
      USERNAME: sa
      PASSWORD: symbian
      DEBUG: db
    restart: unless-stopped
    
  sql-exporter:
    image: 192.168.4.15:6000/githubfree/sql_exporter
    container_name: sql-exporter
    ports:
      - "9399:9399"
    volumes:
      - /home/milan/Desktop/prometheus/sql_exporter.yml:/sql_exporter.yml
      - /home/milan/Desktop/prometheus/metrics:/metrics
    command: [ "/bin/sql_exporter", "--config.file=/sql_exporter.yml" ]
    restart: unless-stopped
    



